# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '$(ServiceConnection)'
  imageRepository: '$(ImageRepository)'
  containerRegistry: '$(ContainerRegistry)'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Docker@2
            displayName: Build image
            inputs:
              arguments: '--build-arg SENDGRID_API_KEY=$(SENDGRID_API_KEY) --build-arg SENDGRID_SENDER=$(SENDGRID_SENDER) --build-arg MAILGUN_DOMAIN=$(MAILGUN_DOMAIN) --build-arg MAILGUN_API_KEY=$(MAILGUN_API_KEY) --build-arg MAILGUN_SENDER=$(MAILGUN_SENDER) --build-arg MAIL_PROVIDER=$(MAIL_PROVIDER)'
              command: build
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
          - task: Docker@2
            displayName: Push an image to container registry
            inputs:
              command: push
              repository: $(imageRepository)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
